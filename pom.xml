<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.thesett</groupId>
    <artifactId>numbers_build</artifactId>
    <name>numbers_build</name>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <scm>
        <connection>scm:${scm.setup}/projects/mavenbuild</connection>
    </scm>

    <prerequisites>
        <maven>2.0.8</maven>
    </prerequisites>

    <mailingLists>
    </mailingLists>

    <organization>
        <name>The Sett ltd.</name>
        <url>http://www.thesett.com/</url>
    </organization>

    <developers>
        <developer>
            <name>Rupert Smith</name>
            <id>rupert</id>
            <email>rupertlssmith (contactable on g-m-a-i-l)</email>
            <organization />
        </developer>
    </developers>

    <properties>
        <topdir>${basedir}/.</topdir>

        <!-- Stops the dependency plugin running really slowly. -->
        <dependency.locations.enabled>false</dependency.locations.enabled>

        <checkstyle.header.file>${topdir}/etc/license/license.txt</checkstyle.header.file>
        <checkstyle.config>${topdir}/etc/coding_standards.xml</checkstyle.config>
        <checkstyle.suppressions>${topdir}/etc/coding_standards_suppressions.xml</checkstyle.suppressions>

        <findbugs.exclude.file>${topdir}/etc/findbugs-exclude.xml</findbugs.exclude.file>

        <!-- Plugin versions. Particularly for snapshots it is handy to be able to upgrade these as releases appear. -->
        <maven.compiler.plugin.version>2.0.1</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>2.0</maven.dependency.plugin.version>
        <maven.assembly.plugin.version>2.2-beta-1</maven.assembly.plugin.version>
        <maven.surefire.plugin.version>2.4.3</maven.surefire.plugin.version>
        <jalopy.maven.plugin.version>1.9.4-108</jalopy.maven.plugin.version>
        <maven.jaxb2.plugin.version>0.7.5</maven.jaxb2.plugin.version>
        <xdoclet.maven.plugin.version>1.0</xdoclet.maven.plugin.version>
        <!--<maven.clover2.plugin.version>2.3.1</maven.clover2.plugin.version>-->
        <maven.run.plugin.version>0.1</maven.run.plugin.version>
        <maven.antrun.plugin.version>1.2-thesett</maven.antrun.plugin.version>
        <!--<maven.antrun.plugin.version>1.7</maven.antrun.plugin.version>-->
        <maven.idea.plugin.version>2.2</maven.idea.plugin.version>
        <maven.war.plugin.version>2.0</maven.war.plugin.version>
        <javacc.maven.plugin.version>2.1</javacc.maven.plugin.version>
        <maven.dashboard.plugin.version>1.1-thesett</maven.dashboard.plugin.version>
        <!--<maven.dashboard.plugin.version>1.5-SNAPSHOT</maven.dashboard.plugin.version>-->
        <jboss.maven.plugin.version>1.3.1</jboss.maven.plugin.version>
        <maven.pmd.plugin.version>2.4</maven.pmd.plugin.version>
        <maven.findbugs.plugin.version>1.2</maven.findbugs.plugin.version>
        <maven.javadoc.plugin.version>2.4</maven.javadoc.plugin.version>
        <maven.checkstyle.plugin.version>2.2</maven.checkstyle.plugin.version>
        <maven.jxr.plugin.version>2.1</maven.jxr.plugin.version>
        <taglist.maven.plugin.version>2.2</taglist.maven.plugin.version>
        <maven.surefire.report.plugin.version>2.4.3</maven.surefire.report.plugin.version>
        <javancss.maven.plugin.version>2.0-beta-2</javancss.maven.plugin.version>
        <simian.maven.plugin.version>1.1-thesett-SNAPSHOT</simian.maven.plugin.version>
        <maven.build.helper.plugin.version>1.3</maven.build.helper.plugin.version>
        <maven.ear.plugin.version>2.0</maven.ear.plugin.version> <!-- Later versions do not support resourcesDir. -->

        <log4j.configuration>file:${topdir}/etc/log4j.xml</log4j.configuration>

        <jstl.jar.version>1.1.2</jstl.jar.version>

        <!--
            Clover does not set up ${project.build.finalName} with its 'clover' classifier. The 'final.classifier' property is empty
            by default, but should be included in the path of any custom modifications to final build artifacts, for example, in
            antrun scripts. This is used when specifying archives to run cactus on.
        -->
        <final.classifier></final.classifier>

        <pmd.ruleset.file>${topdir}/etc/pmd_rules.xml</pmd.ruleset.file>

        <platform>linux</platform>
    </properties>

    <repositories>

        <!-- My local collection of jars. -->

        <repository>
            <id>local.m2.repo</id>
            <name>Local Maven Repository</name>
            <url>http://www.thesett.com/local_maven2_repository</url>
            <!--<url>file:/home/rupert/sc/svn/local_maven2_repository</url>-->
        </repository>


    </repositories>

    <pluginRepositories>

        <!-- My local collection of jars. -->
        <pluginRepository>
            <id>local.m2.plugin.repo</id>
            <name>Local Maven Repository</name>
            <url>http://www.thesett.com/local_maven2_repository</url>
            <!--<url>file:/home/rupert/sc/svn/local_maven2_repository</url>-->
        </pluginRepository>

    </pluginRepositories>

    <distributionManagement>

        <!-- The repository for fully versioned releases. -->
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>release-repo</id>
            <name>The Badger Set Maven2 Repository</name>
            <url>file://${basedir}/../releases</url>
            <layout>default</layout>
        </repository>

        <!-- The repository for snapshot releases. -->
        <snapshotRepository>
            <uniqueVersion>true</uniqueVersion>
            <id>snapshot-repo</id>
            <name>The Badger Set Maven2 Snapshot Repository</name>
            <url>file://${basedir}/../snapshots</url>
            <layout>default</layout>
        </snapshotRepository>

        <!-- Set up for locally generated site. -->
        <site>
            <id>All_Projects_Site</id>
            <name>All Projects Site</name>
            <url>file:/var/www/build_reports/catalogue</url>
        </site>

    </distributionManagement>

    <modules>
        <module>chisel_util</module>
        <module>numbers</module>
        <module>numbers_api</module>
        <module>numbers_chisel</module>
        <module>numbers_util</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.thesett</groupId>
                <artifactId>util</artifactId>
                <version>0.3-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>com.thesett</groupId>
                <artifactId>common</artifactId>
                <version>0.3-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>3.8.1</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>[1.2.8,)</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>src/main</sourceDirectory>
        <testSourceDirectory>src/unittests</testSourceDirectory>

        <pluginManagement>
            <plugins>

                <!-- Ensures the compiler plugin is set up for Java 1.5 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>1.5</source>
                        <target>1.5</target>
                        <fork>false</fork>
                    </configuration>
                </plugin>

                <!-- Ensure latest dependency plugin is used. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>

                <!-- Fix the version of the assembly plugin. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>

                <!-- Fix the version of the ear plugin. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${maven.ear.plugin.version}</version>
                </plugin>

                <!-- Only run tests in files ending in Test.java, override the default set up. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <systemProperties>
                            <property>
                                <name>log4j.configuration</name>
                                <value>${log4j.configuration}</value>
                            </property>
                        </systemProperties>
                        <excludes>
                            <exclude>**/Test*.java</exclude>
                            <exclude>**/*TestCase.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- For source code beautification. -->
                <plugin>
                    <groupId>triemax</groupId>
                    <artifactId>jalopy-maven</artifactId>
                    <version>${jalopy.maven.plugin.version}</version>
                    <configuration>
                        <profile>default</profile>
                        <sources>
                            <source>${basedir}/src/main</source>
                            <source>${basedir}/src/unittests</source>
                        </sources>
                    </configuration>
                </plugin>

                <!-- Set up clover to aggregate results over the whole codebase for all modules. -->
                <!--
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>maven-clover2-plugin</artifactId>
                    <version>${maven.clover2.plugin.version}</version>
                    <configuration>
                        <licenseLocation>${clover.license.path}</licenseLocation>
                        <jdk>1.5</jdk>
                        <includesTestSourceRoots>false</includesTestSourceRoots>
                        <generateXml>true</generateXml>
                        <generateHtml>true</generateHtml>
                        <historyDir>${clover.history.path}</historyDir>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>instrument</goal>
                                <goal>aggregate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                -->

                <!--
                     Set up the run plugin to generate run scripts or invoke main methods. This configuration will generate a defaul
                     run script called 'runj' in the target directory, that invoked java with the log4j.configuration parameter passed
                     to it, and the projects complete runtime classpath set up.
                -->
                <plugin>
                    <groupId>com.thesett</groupId>
                    <artifactId>maven-run-plugin</artifactId>
                    <version>${maven.run.plugin.version}</version>
                    <configuration>
                        <scriptOutDirectory>target</scriptOutDirectory>
                        <systemproperties>
                            <property>
                                <name>log4j.configuration</name>
                                <value>${log4j.configuration}</value>
                            </property>
                        </systemproperties>
                        <commands>
                            <runj/>
                        </commands>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>script</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Set up the version and dependencies of the antrun plugin. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>

                    <dependencies>
                    </dependencies>
                </plugin>

                <!-- Configure idea plugin to exclude a standard set of directories under target. Prevents intellij scanning too much. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>${maven.idea.plugin.version}</version>
                    <configuration>
                        <jdkLevel>1.5</jdkLevel>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                        <exclude></exclude>
                    </configuration>
                </plugin>

                <!-- Set up the war plugin version to use. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>

                <!-- Set up the javacc plugin version to use. -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <version>${javacc.maven.plugin.version}</version>
                </plugin>

                <!-- Set up the build helper plugin version to use. -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Set up the columns to display in the dashboard report. -->
            <plugin>
                <groupId>com.xebia.mojo</groupId>
                <artifactId>maven-dashboard-plugin</artifactId>
                <version>${maven.dashboard.plugin.version}</version>
                <configuration>
                    <destinationFile>${project.reporting.outputDirectory}/maven-dashboard-report.html</destinationFile>
                    <reports>
                        <report>maven-surefire-report-plugin</report>
                        <!--<report>maven-clover2-plugin</report>-->
                        <report>maven-checkstyle-plugin</report>
                        <report>maven-pmd-plugin</report>
                        <report>findbugs-maven-plugin</report>
                        <report>taglist-maven-plugin</report>
                        <report>javancss-maven-plugin</report>
                    </reports>
                    <columns>
                        <maven-surefire-report-plugin>tests,errors,failures,successrate</maven-surefire-report-plugin>
                        <!--<maven-clover2-plugin>bar</maven-clover2-plugin>-->
                        <maven-checkstyle-plugin>errors,warnings</maven-checkstyle-plugin>
                        <maven-pmd-plugin>violations</maven-pmd-plugin>
                        <findbugs-maven-plugin>violations</findbugs-maven-plugin>
                        <javancss-maven-plugin>classes,ncss</javancss-maven-plugin>
                    </columns>
                </configuration>
            </plugin>

            <!-- Set the version of the findbugs plugin to use. Later versions get fussy with modules with no source. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.findbugs.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!--
                    <execution>
                        <id>preclean</id>
                        <phase>pre-clean</phase>
                        <configuration>
                            <tasks>
                                <echo>Pre clean...</echo>
                                <echo>Delete symlink and target directory on the ramdrive.</echo>

                                <exec executable="${topdir}/clean_target_dir.sh">
                                    <arg value="${basedir}"/>
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>postclean</id>
                        <phase>clean</phase>
                        <configuration>
                            <tasks>
                                <echo>Post clean...</echo>
                                <echo>Create target directory on the ramdrive and create symlink.</echo>

                                <exec executable="${topdir}/create_target_dir.sh">
                                    <arg value="${basedir}"/>
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    -->
                </executions>
            </plugin>

        </plugins>

    </build>

    <reporting>
        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.findbugs.plugin.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <threshold>Low</threshold>
                    <effort>Min</effort>
                    <visitors>FindDeadLocalStores,UnreadFields</visitors>
                    <excludeFilterFile>${findbugs.exclude.file}</excludeFilterFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin.version}</version>
                <configuration>
                    <linkXref>true</linkXref>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>50</minimumTokens>
                    <targetJdk>1.5</targetJdk>
                    <rulesets>
                        <ruleset>${pmd.ruleset.file}</ruleset>
                    </rulesets>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>pmd</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <tags>
                        <tag>
                            <name>todo</name>
                            <placement>a</placement>
                            <head>To do:</head>
                        </tag>
                    </tags>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>${checkstyle.config}</configLocation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven.jxr.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${taglist.maven.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven.surefire.report.plugin.version}</version>
            </plugin>

            <!--
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-clover2-plugin</artifactId>
                <version>${maven.clover2.plugin.version}</version>
                <configuration>
                    <licenseLocation>${clover.license.path}</licenseLocation>
                    <jdk>1.5</jdk>
                    <includesTestSourceRoots>false</includesTestSourceRoots>
                    <generateXml>true</generateXml>
                    <generateHtml>true</generateHtml>
                    <historyDir>${clover.history.path}</historyDir>
                </configuration>
            </plugin>
            -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>${javancss.maven.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>com.xebia.mojo</groupId>
                <artifactId>maven-dashboard-plugin</artifactId>
                <version>${maven.dashboard.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>simian-maven-plugin</artifactId>
                <version>${simian.maven.plugin.version}</version>
                <configuration>
                    <ignoreCharacterCase>true</ignoreCharacterCase>
                    <ignoreCurlyBraces>true</ignoreCurlyBraces>
                    <ignoreIdentifierCase>true</ignoreIdentifierCase>
                    <ignoreModifiers>true</ignoreModifiers>
                    <ignoreStringCase>true</ignoreStringCase>
                    <threshold>8</threshold>
                </configuration>
            </plugin>

        </plugins>
    </reporting>

    <profiles>
        <!-- Build profile to build quickly without running tests. -->
        <profile>
            <id>skip</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>

        <!-- Build profile to ignore test failures. -->
        <profile>
            <id>ignore</id>
            <properties>
                <maven.test.failure.ignore>true</maven.test.failure.ignore>
                <maven.test.error.ignore>true</maven.test.error.ignore>
            </properties>
        </profile>

        <!--
             Build profile for running clover. Clover does not set up ${project.build.finalName} with its 'clover' classifier.
             When building with clover this profile must be active so that builds that need to refer to the clovered final build artifac
             can add in the needed classifier to refer to it. When this profile is not active the 'final.classifier' property is
             empty. This is used when specifying archives to run cactus on.
        -->
        <profile>
            <id>clover</id>
            <properties>
                <final.classifier>-clover</final.classifier>
            </properties>
        </profile>

        <!--
            Build profile to run the integration tests.
        -->
        <profile>
            <id>integration</id>
            <modules>
                <module>index-ra-test</module>
                <module>catalogue-ejb-test</module>
            </modules>
        </profile>

        <!--
            Build profile to create the application packages.
        -->
        <profile>
            <id>packages</id>
            <modules>
                <module>thecookerybook-dev</module>
                <module>thecookerybook-prod</module>
                <module>theset-dev</module>
                <module>theset-prod</module>
            </modules>
        </profile>

    </profiles>

</project>
